package hr.fer.ppj.lab2;

import java.io.*;
import java.util.Scanner;

/**
 * Class for performing syntax analysis.
 */
public class SA {

    /**
     * Path to the output file of generator
     */
    final static String SERIALIZATION_FILE_PATH = "./src/hr.fer.ppj.lab2.analizator/definition.ser";
    private final static String TEST_FILE_INPUT_PATH = "./src/hr.fer.ppj.lab2.res/in/";
    private final static String TEST_FILE_OUTPUT_PATH = "./src/hr.fer.ppj.lab2.res/out/GSA_out.txt";
    private static String program;

    /**
     * Entry point
     */
    public static void main(String[] args) {

        //setupStdIO();

        try (Scanner scanner = new Scanner(System.in)) {

            readInputProgram(scanner);
            deserializeData();

        } catch (Exception e) {
            System.err.println(e.getMessage());
            System.exit(1);
        }

        runSyntaxAnalyser();
    }

    /**
     * Standard I/O redirection
     */
    private static void setupStdIO() throws IOException {
        System.setIn(new FileInputStream(new File(TEST_FILE_INPUT_PATH)));
        System.setOut(new PrintStream(new File(TEST_FILE_OUTPUT_PATH)));
    }


    /**
     * Method for reading program from standard input
     */
    private static void readInputProgram(Scanner scanner) {

        StringBuilder sb = new StringBuilder();
        while (scanner.hasNextLine()) {
            sb.append(scanner.nextLine()).append("\n");
        }

        program = sb.toString();
    }

    /**
     * Method for deserializing data generated by GLA
     */
    private static void deserializeData() throws Exception {

        try {

            File file = new File(GSA.SERIALIZATION_FILE_PATH);
            FileInputStream fis = new FileInputStream(file);
            ObjectInputStream ois = new ObjectInputStream(fis);

            fis.close();
            ois.close();

        } catch (IOException e) {
            throw new IOException(e.getMessage());
        }

    }

    /**
     * Method that starts the lexical analysis of given program
     */
    private static void runSyntaxAnalyser() {
    }

}
